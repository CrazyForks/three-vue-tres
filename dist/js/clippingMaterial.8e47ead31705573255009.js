import{Z as m,k as _,aH as l,aI as o,a4 as f,am as h,o as d,v as g,C as w,J as a,a7 as x,a as I,aa as B,V as e,c as C,E as T,at as i,aJ as b,D as k}from"./vendor.80b0f38b1705573255009.js";const v=e("TresPerspectiveCamera",{fov:40,near:.1,far:200,position:[-1.5,2.5,3]},null,-1),y=e("TresGridHelper",{args:[2,10]},null,-1),M=e("TresHemisphereLight",{args:[16777215,526344,4.5],position:[-1.25,1,1.25]},null,-1),P=["args"],E=["color","side","clipIntersection"],G=m({__name:"clippingMaterial",setup(H){const s=_(),c=[];for(let n=1;n<30;n+=2)c.push(n);const t=[new l(new o(1,0,0),0),new l(new o(0,-1,0),0),new l(new o(0,0,-1),0)],u={clipIntersection:!0,planeConstant:0,showHelpers:!1};f(()=>{if(s.value){let n=s.value.context.renderer.value;n.localClippingEnabled=!0}});const r=new h({title:"裁剪参数",expanded:!0});return r.addBinding(t[0],"constant",{label:"x",min:-1,max:1,step:.1}),r.addBinding(t[1],"constant",{label:"y",min:-1,max:1,step:.1}),r.addBinding(t[2],"constant",{label:"z",min:-1,max:1,step:.1}),(n,L)=>(d(),g(a(x),{ref_key:"tcRef",ref:s,"window-size":""},{default:w(()=>[v,y,M,I(a(B)),e("TresGroup",null,[(d(),C(k,null,T(c,p=>e("TresMesh",{key:p},[e("TresSphereGeometry",{args:[p/30,48,24]},null,8,P),e("TresMeshLambertMaterial",{color:[a(i).randInt(.1,1),a(i).randInt(0,1),a(i).randInt(0,1)],side:a(b),clippingPlanes:t,clipIntersection:u.clipIntersection},null,8,E)])),64))])]),_:1},512))}});export{G as default};
