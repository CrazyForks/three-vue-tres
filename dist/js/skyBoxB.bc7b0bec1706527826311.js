import{Z as m,ai as v,bT as x,bX as p,o as n,c as h,V as e,a8 as d,a9 as _,b0 as f,v as l,C as u,J as r,a7 as y,bV as w,a as i,aa as S,aE as P,ah as T}from"./vendor.543c78401706527826311.js";import{l as k}from"./utils.2b96583b1706527826311.js";import"./RGBELoader.a0db3c881706527826311.js";const B=["args"],M=m({__name:"skyBoxBmesh",props:{texture:{},size:{default:1e3}},async setup(c){let a,o;const t=c,s=([a,o]=v(()=>k(t.texture)),a=await a,o(),a);s.wrapS=s.wrapT=x,s.generateMipmaps=!1,s.magFilter=p,s.minFilter=p;const g={uniforms:{uSkybox:{type:"t",value:s}},side:f,vertexShader:"\n		varying vec3 vFragPos;\n\n		void main() {\n				vFragPos = position.xyz;\n				vec4 viewSpace = vec4(mat3(modelViewMatrix) * position, 0.0);\n				viewSpace.w = 1.0;\n				gl_Position = projectionMatrix * viewSpace;    \n		}",fragmentShader:"\n		uniform sampler2D uSkybox;\n		varying vec3 vFragPos;\n		const float PI = 3.14159265359;\n		void main() {\n				vec3 dir = normalize(vFragPos);\n				float v = (asin(dir.y) + PI * 0.5) / (PI); \n				float u = (atan(dir.x, dir.z) + PI) / (PI * 2.0);\n				gl_FragColor = texture2D(uSkybox, vec2(u, v));\n		}",depthWrite:!0};return(F,I)=>(n(),h("TresMesh",null,[e("TresBoxGeometry",{args:[t.size,t.size,t.size]},null,8,B),e("TresShaderMaterial",d(_(g)),null,16)]))}}),C=e("TresPerspectiveCamera",{position:[15,15,15],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1),b=e("TresAmbientLight",{intensity:10},null,-1),z=e("TresMesh",{position:[0,2,-4],"cast-shadow":""},[e("TresBoxGeometry",{args:[2,2,2]}),e("TresMeshNormalMaterial")],-1),A=m({__name:"skyBoxB",setup(c){const a={clearColor:"#201919",windowSize:!0,shadows:!0,toneMapping:w,toneMappingExposure:.8};return(o,t)=>(n(),l(r(y),d(_(a)),{default:u(()=>[C,i(r(S),{enableDamping:""}),b,i(r(P),{args:[3,3,3],color:"orange",position:[3,2,1],"cast-shadow":""}),z,(n(),l(T,null,{default:u(()=>[i(M,{texture:"https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/desert_1k.hdr"})]),_:1}))]),_:1},16))}});export{A as default};
