import{$ as x,k as m,ak as k,a5 as T,a4 as M,o as g,c as E,W as e,E as U,aE as D,au as R,v as $,D as N,K as _,a8 as V,a as h,ab as F}from"./vendor.N0szyCtn1710511998162.js";import{R as G,E as p,S as L}from"./EffectComposer.QPH4y2V_1710511998162.js";import{U as z}from"./UnrealBloomPass.FXxUxNIh1710511998162.js";const j=e("TresBoxGeometry",{args:[1,1,1]},null,-1),A=e("TresMeshNormalMaterial",null,null,-1),H=[j,A],I=e("TresBoxGeometry",{args:[1,1,1]},null,-1),K=e("TresMeshNormalMaterial",null,null,-1),W=[I,K],q=x({__name:"ecLayerShaderPass",setup(w){const a=m(),r=m(),{camera:t,renderer:n,scene:f,sizes:c}=k(),d={strength:.572,radius:.51,threshold:0};let v=null,s=null,o=null;const y=(l,i,u,B,S)=>{v=new G(l,i);const C=new z(new D(B,S),d.strength,d.radius,d.threshold);s=new p(u),s.renderToScreen=!1,s.addPass(v),s.addPass(C)},P=l=>{o=new p(l);const i=new R({uniforms:{baseTexture:{value:null},bloomTexture:{value:s.renderTarget2.texture}},vertexShader:"\n            varying vec2 vUv;\n            void main() {\n                vUv = uv;\n                gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n            }\n        ",fragmentShader:"\n            uniform sampler2D baseTexture;\n            uniform sampler2D bloomTexture;\n            varying vec2 vUv;\n            void main() {\n                gl_FragColor = ( vec4( 1.0 ) *texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );\n            }\n        ",defines:{}}),u=new L(i,"baseTexture");u.needsSwap=!0,o.addPass(v),o.addPass(u)};T(()=>{a.value&&a.value.layers.set(0),r.value&&r.value.layers.set(1),c.width.value&&(y(f.value,t.value,n.value,c.width.value,c.height.value),P(n.value))});const{onLoop:b}=M();return b(()=>{s&&o&&t.value&&(n.value.clear(),t.value.layers.set(1),s.render(),n.value.clearDepth(),t.value.layers.set(0),o.render(f.value,t.value))}),(l,i)=>(g(),E(U,null,[e("TresMesh",{ref_key:"normalBox",ref:a,position:[3,2,1]},H,512),e("TresMesh",{ref_key:"shineBox",ref:r,position:[0,2,-4]},W,512)],64))}}),J=e("TresPerspectiveCamera",{position:[10,10,10]},null,-1),O=e("TresAmbientLight",{intensity:1},null,-1),Q=e("TresGridHelper",{args:[10,10]},null,-1),ee=x({__name:"effectComposerShaderPass",setup(w){const a=m();return T(()=>{if(a.value){let r=a.value.context.renderer.value;r.autoClear=!1}}),(r,t)=>(g(),$(_(V),{disableRender:"","window-size":"",ref_key:"tcRef",ref:a},{default:N(()=>[J,O,h(_(F)),Q,h(q)]),_:1},512))}});export{ee as default};
