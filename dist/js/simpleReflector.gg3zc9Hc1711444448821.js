import{a0 as n,a1 as t,aq as l,r as c,o as m,v as d,D as p,a as r,K as s,ab as _,I as f,cu as g,X as e,a$ as u,a9 as h,aa as C}from"./vendor.4APFmCD01711444448821.js";import{_ as v}from"./reflectorMesh.vue_vue_type_script_setup_true_lang.xCVDbsMD1711444448821.js";import"./Reflector.p0HTm3Xx1711444448821.js";const T=e("TresPerspectiveCamera",{position:[15,15,15],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1),x=e("TresAmbientLight",{intensity:10},null,-1),B={position:[0,10,0],intensity:10,color:"#ffffff"},b=e("TresMesh",{position:[0,2,-4]},[e("TresBoxGeometry",{args:[1,1,1]}),e("TresMeshNormalMaterial")],-1),y=n({__name:"simpleReflector",setup(z){const o=t({mirrorSize:16,gridSize:15,mirrorColor:"#efefef",divisions:10,colorCenterLine:"#444444",colorGrid:"#888888"}),a=new l({title:"地板参数",expanded:!0});return a.addBinding(o,"mirrorColor",{label:"镜面颜色"}),a.addBinding(o,"mirrorSize",{label:"镜面大小",min:10,max:50,step:1}),a.addBinding(o,"gridSize",{label:"网格大小",min:10,max:50,step:1}),(w,S)=>{const i=c("TresCanvas");return m(),d(i,{clearColor:"#201919","window-size":""},{default:p(()=>[T,r(s(_),{enableDamping:""}),x,f(e("TresDirectionalLight",B,null,512),[[s(g)]]),r(s(u),{args:[1,1,1],color:"orange",position:[3,2,1]}),b,r(v,h(C(o)),null,16)]),_:1})}}});export{y as default};
