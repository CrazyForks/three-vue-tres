import{Z as u,k as m,aE as o,aF as l,a4 as _,af as f,o as p,v as h,C as w,J as n,a7 as g,a as x,aa as C,V as e,c as B,E as T,aG as b,a1 as k,aH as v,D as y}from"./vendor.63b8dc9b1704502812662.js";const E=e("TresPerspectiveCamera",{fov:40,near:.1,far:200,position:[-1.5,2.5,3]},null,-1),G=e("TresGridHelper",{args:[2,10]},null,-1),H=e("TresHemisphereLight",{args:[16777215,526344,4.5],position:[-1.25,1,1.25]},null,-1),I=["args"],L=["color","side","clipIntersection"],V=u({__name:"clippingMaterial",setup(M){const t=m(),i=[];for(let a=1;a<30;a+=2)i.push(a);const s=[new o(new l(1,0,0),0),new o(new l(0,-1,0),0),new o(new l(0,0,-1),0)],d={clipIntersection:!0,planeConstant:0,showHelpers:!1};_(()=>{if(t.value){let a=t.value.context.renderer.value;a.localClippingEnabled=!0}});const r=new f({title:"裁剪参数",expanded:!0});return r.addBinding(s[0],"constant",{label:"x",min:-1,max:1,step:.1}),r.addBinding(s[1],"constant",{label:"y",min:-1,max:1,step:.1}),r.addBinding(s[2],"constant",{label:"z",min:-1,max:1,step:.1}),(a,P)=>(p(),h(n(g),{ref_key:"tcRef",ref:t,"window-size":""},{default:w(()=>[E,G,H,x(n(C)),e("TresGroup",null,[(p(),B(y,null,T(i,c=>e("TresMesh",{key:c},[e("TresSphereGeometry",{args:[c/30,48,24]},null,8,I),e("TresMeshLambertMaterial",{color:new n(b)().setHSL(Math.random(),.5,.5,n(k)),side:n(v),clippingPlanes:s,clipIntersection:d.clipIntersection},null,8,L)])),64))])]),_:1},512))}});export{V as default};
