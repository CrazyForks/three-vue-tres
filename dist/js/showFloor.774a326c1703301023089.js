import{Z as _,aA as d,aB as f,o as n,c as h,V as o,J as t,v as l,C as c,a7 as g,a as p,a6 as b,aa as y,H as w,bM as x,aD as B}from"./vendor.e78e09731703301023089.js";import{R as C}from"./Reflector.d34af2e61703301023089.js";const T=["scale","position"],v=["object","rotation-y"],k=_({__name:"sciFiModular",props:{position:{default:[0,-1,0]},scale:{default:[1,1,1]}},async setup(r){let e,s;const i=r,{nodes:a}=([e,s]=d(()=>f("./plugins/floor/model/reflection_mirror.glb",{draco:!0})),e=await e,s(),e);console.log(a);debugger;const u=a.Object_4.geometry.applyMatrix4(a.GLTF_SceneRootNode.matrix),m=new C(u,{clipBias:.1,multisample:0,color:8355711});debugger;return(F,G)=>(n(),h("TresGroup",{scale:i.scale,position:i.position},[o("primitive",{object:t(m),"rotation-y":-Math.PI/2},null,8,v)],8,T))}}),D=o("TresPerspectiveCamera",{position:[15,15,15],fov:45,near:.1,far:1e5,"look-at":[0,0,0]},null,-1),M=o("TresAmbientLight",{intensity:10},null,-1),j={position:[0,20,0],intensity:100,color:"#ffffff"},A=o("TresGridHelper",null,null,-1),P=_({__name:"showFloor",setup(r){return(e,s)=>(n(),l(t(g),{clearColor:"#201919","window-size":""},{default:c(()=>[D,p(t(y),b(e.controlsState,{enableDamping:""}),null,16),M,w(o("TresDirectionalLight",j,null,512),[[t(x)]]),(n(),l(B,null,{default:c(()=>[p(k,{scale:[10,.2,10],position:[0,-3,0]})]),_:1})),A]),_:1}))}});export{P as default};
