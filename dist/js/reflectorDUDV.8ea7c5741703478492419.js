import{bH as h,bI as y,bJ as b,a_ as w,bt as R,Z as g,bK as T,aA as C,aQ as B,b6 as f,aX as P,b8 as D,a4 as U,o as u,c as N,V as r,J as s,D as E,$ as F,af as j,v as d,C as p,a7 as G,a as x,aa as I,aD as S,a8 as V,a9 as H}from"./vendor.3b6898491703478492419.js";import{d as $}from"./dither.glsl.1a24d3091703478492419.js";import{R as k}from"./OimoPhysicsBuffer.c2f9b41e1703478492419.js";const z="\nin vec3 position;\nin vec3 normal;\nin vec2 uv;\n\nuniform mat4 modelMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\n\nuniform mat3 uMapTransform;\nuniform mat4 uMatrix;\n\nout vec2 vUv;\nout vec4 vCoord;\nout vec3 vNormal;\nout vec3 vToEye;\n\nvoid main() {\n    vUv = (uMapTransform * vec3(uv, 1.0)).xy;\n    vCoord = uMatrix * vec4(position, 1.0);\n    vNormal = normalMatrix * normal;\n\n    vec4 worldPosition = modelMatrix * vec4(position, 1.0);\n    vToEye = cameraPosition - worldPosition.xyz;\n\n    vec4 mvPosition = viewMatrix * worldPosition;\n    gl_Position = projectionMatrix * mvPosition;\n}\n",A="\nprecision highp float;\n\nuniform sampler2D tMap;\nuniform sampler2D tReflect;\nuniform sampler2D tReflectBlur;\nuniform float uReflectivity;\n\nin vec2 vUv;\nin vec4 vCoord;\nin vec3 vNormal;\nin vec3 vToEye;\n\nout vec4 FragColor;\n\n".concat($,"\n\nvoid main() {\n    vec2 reflectionUv = vCoord.xy / vCoord.w;\n\n    vec4 dudv = texture(tMap, vUv);\n    vec4 color = texture(tReflect, reflectionUv);\n\n    vec4 blur;\n\n    blur = texture(tReflectBlur, reflectionUv + dudv.rg / 256.0);\n    color = mix(color, blur, smoothstep(1.0, 0.1, dudv.g));\n\n    blur = texture(tReflectBlur, reflectionUv);\n    color = mix(color, blur, smoothstep(0.5, 1.0, dudv.r));\n\n    FragColor = color * mix(0.6, 0.75, dudv.g);\n\n    // Fresnel term\n    vec3 toEye = normalize(vToEye);\n    float theta = max(dot(toEye, vNormal), 0.0);\n    float reflectance = uReflectivity + (1.0 - uReflectivity) * pow((1.0 - theta), 5.0);\n\n    FragColor = mix(vec4(0), FragColor, reflectance);\n\n    #ifdef DITHERING\n        FragColor.rgb = dither(FragColor.rgb);\n    #endif\n\n    FragColor.a = 1.0;\n}\n");class L extends h{constructor({map:e=null,reflectivity:i=0,dithering:o=!1}={}){const t={glslVersion:y,defines:{DITHERING:o},uniforms:{tMap:{value:null},tReflect:{value:null},tReflectBlur:{value:null},uMapTransform:{value:new b},uMatrix:{value:new w},uReflectivity:{value:i}},vertexShader:z,fragmentShader:A,blending:R};e&&(e.updateMatrix(),t.uniforms=Object.assign(t.uniforms,{tMap:{value:e},uMapTransform:{value:e.matrix}})),super(t)}}const J=["object"],K=["object"],O=g({__name:"reflectorDUDV",props:{reflectivity:{default:.8}},async setup(c){let e,i;const o=c,t=new k,M=new T(9.5,10),{map:l}=([e,i]=C(()=>B({map:"./plugins/floor/image/waterdudv.jpg"})),e=await e,i(),e);l.wrapS=f,l.wrapT=f,l.repeat.set(6,3);const n=new L({map:l,reflectivity:o.reflectivity});n.uniforms.tReflect={value:t.renderTarget.texture},n.uniforms.tReflectBlur=t.renderTargetUniform,n.uniforms.uMatrix=t.textureMatrixUniform;const a=new P(new D(10,10),n);return a.rotation.x=-Math.PI/2,a.add(t),a.onBeforeRender=(v,m,_)=>{a.visible=!1,t.update(v,m,_),a.visible=!0},U(()=>{o.reflectivity&&(n.uniforms.uReflectivity.value=o.reflectivity)}),(v,m)=>(u(),N(E,null,[r("primitive",{object:s(a),"position-y":-.01},null,8,J),r("primitive",{object:s(M)},null,8,K)],64))}}),Q=r("TresPerspectiveCamera",{position:[-15,15,-15],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1),W=r("TresAmbientLight",{intensity:10},null,-1),X=r("TresMesh",{position:[3,1,0]},[r("TresBoxGeometry",{args:[2,2,2]}),r("TresMeshNormalMaterial",{wireframe:!0})],-1),Z=r("TresMesh",{position:[0,2,4]},[r("TresBoxGeometry",{args:[1,1,1]}),r("TresMeshNormalMaterial")],-1),te=g({__name:"reflectorDUDV",setup(c){const e=F({reflectivity:2.6});return new j({title:"镜面参数",expanded:!0}).addBinding(e,"reflectivity",{label:"反射率",min:0,max:10,step:.1}),(o,t)=>(u(),d(s(G),{clearColor:"#201919","window-size":""},{default:p(()=>[Q,x(s(I),{enableDamping:""}),W,X,Z,(u(),d(S,null,{default:p(()=>[x(O,V(H(e)),null,16)]),_:1}))]),_:1}))}});export{te as default};
