import{bn as D,bm as O,bd as R,b0 as w,bf as E,$ as C,k as W,bL as G,ak as z,a5 as S,a4 as L,o as m,c as P,W as v,K as i,aO as k,aw as M,b1 as j,a as l,v as g,D as d,ag as _,E as $,ac as H,a0 as N,a1 as q,a2 as F,a3 as A,bc as V,a7 as Z,a8 as U}from"./vendor.pwBCpSCs1710755963586.js";import{C as I}from"./vanilla-307d3a93.esm.bdte0diC1710755963586.js";import{L as K,a as Q,b as X}from"./LineSegments2.eFQ4LMES1710755963586.js";import{T as Y}from"./TilesRenderer.aSsYNDd91710755963586.js";import{U as J,M as ee,P as oe,a as ie,T as te,O as ne,l as x,r as ae}from"./raycasterEvent.4UDQQvIu1710755963586.js";import{_ as re,a as se}from"./radraB.vue_vue_type_script_setup_true_lang.qxFCPdBG1710755963586.js";import{_ as le}from"./precipitation.vue_vue_type_script_setup_true_lang.75n066bB1710755963586.js";import{_ as ue}from"./cloudMesh.vue_vue_type_script_setup_true_lang.YjL7OCM01710755963586.js";import{_ as B}from"./buildingsMarkA.vue_vue_type_script_setup_true_lang.EogoMnYD1710755963586.js";import{_ as ce}from"./fireA.vue_vue_type_script_setup_true_lang.NGcP5LLq1710755963586.js";import{_ as me}from"./fireB.vue_vue_type_script_setup_true_lang.cZsIopNe1710755963586.js";import{_ as pe}from"./smokeA.vue_vue_type_script_setup_true_lang.ldjh2Uii1710755963586.js";import{_ as fe}from"./rippleMesh.vue_vue_type_script_setup_true_lang.YMWDqH5A1710755963586.js";import"./_commonjsHelpers.5-cIlDoe1710755963586.js";import"./BufferGeometryUtils.rIUSCM1V1710755963586.js";import"./ExtensionUtilities.TxB3WdHZ1710755963586.js";import"./SPE.QG1CWYpk1710755963586.js";import"./utils.KceswTWW1710755963586.js";import"./Water2.qiHvw6Jg1710755963586.js";import"./Reflector.cK1RrWyH1710755963586.js";const de=(a,t)=>{const e=new E,o=new w().crossVectors(a,t);return e.x=o.x,e.y=o.y,e.z=o.z,e.w=1+a.clone().dot(t),e.normalize(),e},ge=a=>{a.onLoadTileSet=t=>{const e=new D,o=new O,r=new R;let s=null,p=0;a.getOrientedBounds(e,r)?(s=new w().setFromMatrixPosition(r),p=s.length()):a.getBoundingSphere(o)&&(s=o.center.clone(),p=s.length());const f=s==null?void 0:s.normalize(),u=new w(0,1,0),n=de(f,u);a.group.quaternion.x=n.x,a.group.quaternion.y=n.y,a.group.quaternion.z=n.z,a.group.quaternion.w=n.w,a.group.position.z=-p}},_e="varying vec4 vPosition;\nvoid main(){\n	vPosition=modelMatrix*vec4(position,1.);\n	csm_Position=position*vec3(1.);\n}",he="uniform mat4 modelMatrix;\nvarying vec4 vPosition;\nuniform vec3 uMax;\nuniform vec3 uMin;\nuniform float uOpacity;\nuniform float uBorderWidth;\nuniform vec3 uLightColor;\nuniform vec3 uColor;\nuniform float uCircleTime;\nuniform float uTime;\nuniform vec3 uTopColor; // 顶部颜色\nuniform bool uGradient;\nvec4 uMax_world;\nvec4 uMin_world;\nvoid main() {\n  // 转世界坐标\n  uMax_world = modelMatrix * vec4(uMax, 1.);\n  uMin_world = modelMatrix * vec4(uMin, 1.);\n  vec3 distColor = uColor;\n  float residue = uTime - floor(uTime / uCircleTime) * uCircleTime;\n  float rate = residue / uCircleTime;\n  float lightOffset = rate * (uMax_world.y - uMin_world.y);\n\n  if (uMin_world.y + lightOffset < vPosition.y &&\n      uMin_world.y + lightOffset + uBorderWidth > vPosition.y) {\n    csm_DiffuseColor = vec4(uLightColor, uOpacity);\n  } else {\n    csm_DiffuseColor = vec4(distColor, uOpacity);\n  }\n\n  // 根据高度计算颜色\n  if (uGradient) {\n    float rateHight =\n        (vPosition.y - uMin_world.y) / (uMax_world.y - uMin_world.y);\n    // vec3 outColor = mix(csm_DiffuseColor.xyz, uTopColor, rateHight * 0.6);\n    float mixNumber = clamp(rateHight * 2.3 - 1.5, 0., 1.);\n    vec3 outColor = mix(csm_DiffuseColor.xyz, uTopColor, mixNumber);\n\n    csm_DiffuseColor = vec4(outColor, uOpacity);\n  }\n}",we=["object"],ve=C({__name:"tilesBuildings",props:{bulidingsColor:{default:"#e523ff"},topColor:{default:"#ffff00"},opacity:{default:.8},gradient:{type:Boolean,default:!0},camera:{}},setup(a){const t=a,e=W(0),o=u=>{const{geometry:n}=u;n.computeBoundingBox(),n.computeBoundingSphere();const{max:c,min:y}=n.boundingBox,h=new I({baseMaterial:new k,vertexShader:_e,fragmentShader:he,silent:!0,uniforms:{uMax:{value:c},uMin:{value:y},uBorderWidth:{value:5},uCircleTime:{value:5},uColor:{value:new M(t.bulidingsColor)},uOpacity:{value:t.opacity},uLightColor:{value:new M("#ffffff")},uTopColor:{value:new M(t.topColor)},uTime:e,uGradient:{value:t.gradient}},depthWrite:!0,depthTest:!0,transparent:!0,side:j});u.material.dispose(),u.material=h},r=new Y("https://jdvop.oss-cn-qingdao.aliyuncs.com/mapv-data/titleset/sz_ns/no.json");r.errorTarget=2,r.onLoadModel=u=>{u.traverse(n=>{if(n.isMesh){o(n),n.receiveShadow=!1,n.castShadow=!1;const c=new G(n.geometry.clone());let h=new K().fromEdgesGeometry(c),b=new Q({color:0,linewidth:1,opacity:1,transparent:!0,depthWrite:!0,depthTest:!0});b.resolution.set(window.innerWidth,window.innerHeight);const T=new X(h,b);T.applyMatrix4(n.matrix.clone()),n.parent.add(T)}})},ge(r);const{renderer:s,sizes:p}=z();S(()=>{p.width.value&&(r.setCamera(t.camera),r.setResolutionFromRenderer(t.camera,s.value))});const{onBeforeLoop:f}=L();return f(({delta:u})=>{e.value+=u*2,t.camera&&p.width.value&&(t.camera.updateMatrixWorld(),r.update())}),(u,n)=>(m(),P("TresGroup",null,[v("primitive",{object:i(r).group},null,8,we)]))}}),ye=["object","rotation"],Me=C({__name:"tileMapBuildingsMesh",props:{bbox:{default:[104.955976,20.149765,120.998419,30.528687]},maxZoom:{default:20},mapCenter:{},camera:{}},setup(a,{expose:t}){const e=a,{renderer:o,scene:r}=z(),s=new oe;s.coordType=J;const p=new ie;p.source="https://webrd04.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=7&x={x}&y={y}&z={z}",p.showTileNo=!1,p.useWorker=!0;const f=new te(s,p);f.showBoundingBox=!1,f.wireframe=!1,f.flatShading=!1,f.filter={opposite:!0,genBright:1.3,genContrast:1,genSaturation:1};let u=new M("#4688b5");f.filter.monochrome={r:u.r,g:u.g,b:u.b};const n=new ee;n.provider=f,n.bbox=e.bbox,n.maxZoom=e.maxZoom,e.camera.up=new w(0,1,0),e.camera.position.set(e.mapCenter[0],e.mapCenter[2],-e.mapCenter[1]+2e3),e.camera.lookAt(new w(e.camera.position.x,0,e.camera.position.z-3e3)),n.camera=e.camera;let c=null;S(()=>{o.value&&(c=new ne(e.camera,o.value.domElement),c.enableDamping=!0,c.dampingFactor=.05,c.minDistance=600,c.position0.set(e.camera.position.x,e.camera.position.y,e.camera.position.z),c.target.set(e.camera.position.x,0,e.camera.position.z-2e3))});const{onLoop:y}=L();return y(()=>{if(o.value){const h=Math.abs(e.camera.position.y)*50;e.camera.far=h+5e3,e.camera.updateProjectionMatrix(),c&&(c.update(),c.target.y=0),n.update(),o.value.render(r.value,e.camera)}}),t({camera:e.camera,map:n}),(h,b)=>(m(),P("primitive",{object:i(n),rotation:[-Math.PI/2,0,0]},null,8,ye))}}),Ce=C({__name:"mapBuildingsMoreMeshes",props:{cPosition:{}},setup(a){const t=x(113.9456,22.5385,50),e=x(113.9498,22.5364,50);return(o,r)=>(m(),P($,null,[l(i(re),{color:"#00c0ff",radius:300,size:300,position:[o.cPosition[0],8,-o.cPosition[1]]},null,8,["position"]),(m(),g(_,null,{default:d(()=>[l(i(B),{position:[o.cPosition[0],8,-o.cPosition[1]],scale:.13,img:"./plugins/digitalCity/image/znsba.png",foremost:!1},null,8,["position"])]),_:1})),l(i(se),{position:[o.cPosition[0]+700,10,-o.cPosition[1]+300],color:"#ffff00",height:180,maxRadius:400},null,8,["position"]),(m(),g(_,null,{default:d(()=>[l(i(B),{position:[o.cPosition[0]+700,10,-o.cPosition[1]+300],scale:200,img:"./plugins/digitalCity/image/znsb-err.png",sizeAttenuation:!0,foremost:!0},null,8,["position"])]),_:1})),(m(),g(_,null,{default:d(()=>[l(i(ce),{fireScale:80,magnitude:1.3,lacunarity:2,gain:1,position:[o.cPosition[0]+280,1,-o.cPosition[1]+120]},null,8,["position"])]),_:1})),(m(),g(_,null,{default:d(()=>[l(i(me),{position:[o.cPosition[0]+388,6,-o.cPosition[1]+330]},null,8,["position"])]),_:1})),(m(),g(_,null,{default:d(()=>[l(i(pe),{position:[o.cPosition[0]+388,6,-o.cPosition[1]+330]},null,8,["position"])]),_:1})),(m(),g(_,null,{default:d(()=>[l(i(le),{speed:12,size:20,count:26e3,color:"#fff",type:"snow",position:[o.cPosition[0],0,-o.cPosition[1]],areaX:6e3,areaY:3e3,areaZ:6e3},null,8,["position"])]),_:1})),(m(),g(_,null,{default:d(()=>[l(i(ue),{cPosition:[o.cPosition[0],600,-o.cPosition[1]]},null,8,["cPosition"])]),_:1})),l(i(fe),{"position-y":6,positionSrc:[{x:i(t)[0],y:-i(t)[1]},{x:i(t)[0],y:-i(e)[1]},{x:i(e)[0],y:-i(e)[1]},{x:i(e)[0],y:-i(t)[1]},{x:i(t)[0],y:-i(t)[1]}],height:220,color:"#00ffdd"},null,8,["positionSrc"])],64))}}),Pe=v("TresAmbientLight",{color:"#ffffff"},null,-1),be=v("TresDirectionalLight",{position:[100,100,0],intensity:.5,color:"#ffffff"},null,-1),xe=v("TresGridHelper",{args:[1e4,10]},null,-1),Te=v("TresAxesHelper",{args:[1e5]},null,-1),Ue=C({__name:"mapBuildings",setup(a){const t=x(113.942639739199,22.53171672540276,50),e=H(),o=N({clearColor:"#000000",disableRender:!0,alpha:!1,shadowMapType:q,outputColorSpace:F,toneMapping:A}),r=[t[0],t[1],1700],s=new V(60,window.innerWidth/window.innerHeight,1,1e7*10);return(p,f)=>(m(),P($,null,[l(i(U),Z(o,{"window-size":""}),{default:d(()=>[Pe,be,l(i(ve),{position:[i(t)[0],1,-i(t)[1]+228],camera:i(s)},null,8,["position","camera"]),(m(),g(_,null,{default:d(()=>[l(i(Me),{ref_key:"tileMapBuildingsMeshRef",ref:e,bbox:[104.955976,20.149765,120.998419,30.528687],mapCenter:r,camera:i(s)},null,8,["camera"])]),_:1})),(m(),g(_,null,{default:d(()=>[l(Ce,{cPosition:i(t)},null,8,["cPosition"])]),_:1})),xe,Te]),_:1},16),l(ae,{tileMapRef:e.value},null,8,["tileMapRef"])],64))}});export{Ue as default};
