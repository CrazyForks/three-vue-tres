import{aF as M,aW as Se,aX as ce,aY as ee,Z as we,aZ as ge,ai as pe,k as se,a_ as be,a4 as Be,w as le,a3 as Te,aP as xe,o as Ae,c as Me,V as R,a8 as $e,a9 as ze,aB as Ce,$ as Ee,af as Ge,a$ as ke,aG as Ne,b0 as Ie,v as Ve,C as ye,a6 as ne,J as te,a7 as Re,b1 as Pe,a as oe,aa as je,ay as Le}from"./vendor.56c367c31704931946430.js";/**
 * @description Loop Subdivision Surface
 * @about       Smooth subdivision surface modifier for use with three.js BufferGeometry.
 * @author      Stephens Nunnally <@stevinz>
 * @license     MIT - Copyright (c) 2022 Stephens Nunnally
 * @source      https://github.com/stevinz/three-subdivide
 */const Oe=2,V=new M,S=new M,x=new M,fe=new M,ae=new M,v=new M,b=new M,y=new M,Y=new M,K=new M,Q=new M,ie=[new M,new M,new M],B=[new M,new M,new M],He=new Se;class L{static modify(e,o=1,n={}){if(arguments.length>3&&console.warn("LoopSubdivision.modify() now uses a parameter object. See readme for more info!"),typeof n!="object"&&(n={}),n.split===void 0&&(n.split=!0),n.uvSmooth===void 0&&(n.uvSmooth=!1),n.preserveEdges===void 0&&(n.preserveEdges=!1),n.flatOnly===void 0&&(n.flatOnly=!1),n.maxTriangles===void 0&&(n.maxTriangles=1/0),n.weight===void 0&&(n.weight=1),(isNaN(n.weight)||!isFinite(n.weight))&&(n.weight=1),n.weight=Math.max(0,Math.min(1,n.weight)),!re(e))return e;let u=e.clone();if(n.split){const g=L.edgeSplit(u);u.dispose(),u=g}for(let g=0;g<o;g++)if(u.attributes.position.count/3<n.maxTriangles){let p;n.flatOnly?p=L.flat(u,n):p=L.smooth(u,n),u.groups.forEach(c=>{p.addGroup(c.start*4,c.count*4,c.materialIndex)}),u.dispose(),u=p}return u}static edgeSplit(e){if(!re(e))return e;const o=e.index!==null?e.toNonIndexed():e.clone(),n=new ce,u=de(o),g=o.attributes.position.count,d=o.getAttribute("position"),p=o.getAttribute("normal"),c={},m=[],$={},C=[];for(let h=0;h<g;h+=3){v.fromBufferAttribute(d,h+0),b.fromBufferAttribute(d,h+1),y.fromBufferAttribute(d,h+2),fe.fromBufferAttribute(p,h);const z=k(v),T=k(b),E=k(y),F=He.set(v,b,y).getArea();if(C.push(!Fe(F,0)),!C[h/3]){m.push([]);continue}Ze(fe,v,b,y);const t=k(fe),s=["".concat(z,"_").concat(T,"_").concat(t),"".concat(T,"_").concat(z,"_").concat(t),"".concat(T,"_").concat(E,"_").concat(t),"".concat(E,"_").concat(T,"_").concat(t),"".concat(E,"_").concat(z,"_").concat(t),"".concat(z,"_").concat(E,"_").concat(t)],f=h/3;for(let l=0;l<s.length;l++)c[s[l]]||(c[s[l]]=[]),c[s[l]].push(f),$[s[l]]||((l===0||l===1)&&($[s[l]]=v.distanceTo(b)),(l===2||l===3)&&($[s[l]]=b.distanceTo(y)),(l===4||l===5)&&($[s[l]]=y.distanceTo(v)));m.push([s[0],s[2],s[4]])}u.forEach(h=>{const z=o.getAttribute(h);if(!z)return;const T=J(z,h);n.setAttribute(h,new ee(T,z.itemSize))});const P=o.morphAttributes;for(const h in P){const z=[],T=P[h];for(let E=0,F=T.length;E<F;E++){if(T[E].count!==g)continue;const t=J(T[E],h,!0);z.push(new ee(t,T[E].itemSize))}n.morphAttributes[h]=z}return n.morphTargetsRelative=o.morphTargetsRelative,o.dispose(),n;function J(h,z,T=!1){const F=g*h.itemSize*4,t=new h.array.constructor(F),s=z==="position"&&!T&&o.groups.length>0;let f,l,r=0,N=0,i=h.itemSize;for(let _=0;_<g;_+=3){if(!C[_/3]){N+=3;continue}v.fromBufferAttribute(h,_+0),b.fromBufferAttribute(h,_+1),y.fromBufferAttribute(h,_+2);const I=_/3,G=m[I][0],O=m[I][1],D=m[I][2],H=c[G].length,X=c[O].length,j=c[D].length,Z=H+X+j-3,q=r*3/i/3;if(Z===0)A(t,r,i,v,b,y),r+=i*3;else{const U=$[G],me=$[O],ve=$[D];(U>me||X<=1)&&(U>ve||j<=1)&&H>1?(S.copy(v).add(b).divideScalar(2),j>1?(x.copy(y).add(v).divideScalar(2),A(t,r,i,v,S,x),r+=i*3,A(t,r,i,S,y,x),r+=i*3):(A(t,r,i,v,S,y),r+=i*3),X>1?(x.copy(b).add(y).divideScalar(2),A(t,r,i,S,b,x),r+=i*3,A(t,r,i,x,y,S),r+=i*3):(A(t,r,i,b,y,S),r+=i*3)):(me>ve||j<=1)&&X>1?(S.copy(b).add(y).divideScalar(2),H>1?(x.copy(v).add(b).divideScalar(2),A(t,r,i,S,x,b),r+=i*3,A(t,r,i,x,S,v),r+=i*3):(A(t,r,i,b,S,v),r+=i*3),j>1?(x.copy(y).add(v).divideScalar(2),A(t,r,i,S,y,x),r+=i*3,A(t,r,i,x,v,S),r+=i*3):(A(t,r,i,y,v,S),r+=i*3)):j>1?(S.copy(y).add(v).divideScalar(2),X>1?(x.copy(b).add(y).divideScalar(2),A(t,r,i,y,S,x),r+=i*3,A(t,r,i,S,b,x),r+=i*3):(A(t,r,i,y,S,b),r+=i*3),H>1?(x.copy(v).add(b).divideScalar(2),A(t,r,i,v,x,S),r+=i*3,A(t,r,i,x,b,S),r+=i*3):(A(t,r,i,v,b,S),r+=i*3)):(A(t,r,i,v,b,y),r+=i*3)}s&&o.groups.forEach(U=>{U.start===_-N&&(f!==void 0&&l!==void 0&&n.addGroup(f,q-f,l),f=q,l=U.materialIndex)}),N=0}const w=r*3/i,W=new h.array.constructor(w);for(let _=0;_<w;_++)W[_]=t[_];return s&&f!==void 0&&l!==void 0&&n.addGroup(f,r*3/i/3-f,l),W}}static flat(e,o={}){if(!re(e))return e;const n=e.index!==null?e.toNonIndexed():e.clone(),u=new ce,g=de(n),d=n.attributes.position.count;g.forEach(c=>{const m=n.getAttribute(c);m&&u.setAttribute(c,L.flatAttribute(m,d,o))});const p=n.morphAttributes;for(const c in p){const m=[],$=p[c];for(let C=0,P=$.length;C<P;C++)$[C].count===d&&m.push(L.flatAttribute($[C],d,o));u.morphAttributes[c]=m}return u.morphTargetsRelative=n.morphTargetsRelative,n.dispose(),u}static flatAttribute(e,o,n={}){const g=o*e.itemSize*4,d=new e.array.constructor(g);let p=0,c=e.itemSize;for(let m=0;m<o;m+=3)v.fromBufferAttribute(e,m+0),b.fromBufferAttribute(e,m+1),y.fromBufferAttribute(e,m+2),Y.copy(v).add(b).divideScalar(2),K.copy(b).add(y).divideScalar(2),Q.copy(y).add(v).divideScalar(2),A(d,p,c,v,Y,Q),p+=c*3,A(d,p,c,b,K,Y),p+=c*3,A(d,p,c,y,Q,K),p+=c*3,A(d,p,c,Y,K,Q),p+=c*3;return new ee(d,e.itemSize)}static smooth(e,o={}){if(typeof o!="object"&&(o={}),o.uvSmooth===void 0&&(o.uvSmooth=!1),o.preserveEdges===void 0&&(o.preserveEdges=!1),!re(e))return e;const n=e.index!==null?e.toNonIndexed():e.clone(),u=L.flat(n,o),g=new ce,d=de(n),p=n.attributes.position.count,c=n.getAttribute("position"),m=u.getAttribute("position"),$={},C={},P={},J={};function h(t,s,f){C[t]||(C[t]={}),C[t][s]||(C[t][s]=[]),C[t][s].push(f)}function z(t,s){P[t]||(P[t]=[]),P[t].push(s)}function T(t,s){J[t]||(J[t]=new Set),J[t].add(s)}for(let t=0;t<p;t+=3){const s=k(B[0].fromBufferAttribute(c,t+0)),f=k(B[1].fromBufferAttribute(c,t+1)),l=k(B[2].fromBufferAttribute(c,t+2));h(s,f,t+1),h(s,l,t+2),h(f,s,t+0),h(f,l,t+2),h(l,s,t+0),h(l,f,t+1),Y.copy(B[0]).add(B[1]).divideScalar(2),K.copy(B[1]).add(B[2]).divideScalar(2),Q.copy(B[2]).add(B[0]).divideScalar(2);const r=k(Y),N=k(K),i=k(Q);z(r,t+2),z(N,t+0),z(i,t+1),T(s,r),T(s,i),T(f,r),T(f,N),T(l,N),T(l,i)}for(let t=0;t<u.attributes.position.count;t++){const s=k(ae.fromBufferAttribute(m,t));$[s]||($[s]=[]),$[s].push(t)}d.forEach(t=>{const s=n.getAttribute(t),f=u.getAttribute(t);if(s===void 0||f===void 0)return;const l=F(t,s,f);g.setAttribute(t,new ee(l,f.itemSize))});const E=n.morphAttributes;for(const t in E){const s=[],f=E[t];for(let l=0,r=f.length;l<r;l++){if(f[l].count!==p)continue;const N=f[l],i=L.flatAttribute(f[l],f[l].count,o),w=F(t,N,i);s.push(new ee(w,i.itemSize))}g.morphAttributes[t]=s}return g.morphTargetsRelative=n.morphTargetsRelative,u.dispose(),n.dispose(),g;function F(t,s,f){const l=u.attributes.position.count*f.itemSize,r=new s.array.constructor(l);let N=0;for(let i=0;i<u.attributes.position.count;i+=3){for(let w=0;w<3;w++)if(t==="uv"&&!o.uvSmooth)B[w].fromBufferAttribute(f,i+w);else if(t==="normal"){ie[w].fromBufferAttribute(m,i+w);const W=k(ie[w]),_=$[W],I=Object.keys(_).length,G=.75/I,O=1-G*I;B[w].fromBufferAttribute(f,i+w),B[w].multiplyScalar(O),_.forEach(D=>{V.fromBufferAttribute(f,D),V.multiplyScalar(G),B[w].add(V)})}else{B[w].fromBufferAttribute(f,i+w),ie[w].fromBufferAttribute(m,i+w);const W=k(ie[w]),_=C[W],I=P[W];if(_){if(o.preserveEdges){const j=J[W];let Z=!0;for(const q of j)P[q].length%2!==0&&(Z=!1);if(!Z)continue}const G=Object.keys(_).length,O=1/G*(5/8-Math.pow(3/8+1/4*Math.cos(2*Math.PI/G),2)),D=1/G/G,H=We(D,O,o.weight),X=1-H*G;B[w].multiplyScalar(X);for(let j in _){const Z=_[j];V.set(0,0,0);for(let q=0;q<Z.length;q++)V.add(ae.fromBufferAttribute(s,Z[q]));V.divideScalar(Z.length),V.multiplyScalar(H),B[w].add(V)}}else if(I&&I.length===2){const G=I.length,O=.125,D=1-O*G;B[w].multiplyScalar(D),I.forEach(H=>{V.fromBufferAttribute(s,H),V.multiplyScalar(O),B[w].add(V)})}}A(r,N,f.itemSize,B[0],B[1],B[2]),N+=f.itemSize*3}return r}}}const _e=Math.pow(10,Oe);function Fe(a,e,o=1e-5){return a<e+o&&a>e-o}function ue(a,e=_e){let o=De(a*e);return o==0&&(o=0),"".concat(o)}function k(a,e=_e){return"".concat(ue(a.x,e),",").concat(ue(a.y,e),",").concat(ue(a.z,e))}function We(a,e,o){return(1-o)*a+o*e}function De(a){return a+(a>0?.5:-.5)<<0}function Ze(a,e,o,n){ae.subVectors(e,o),a.subVectors(o,n),a.cross(ae).normalize()}function de(a){const e=["position","normal","uv"],o=Object.keys(a.attributes);return Array.from(new Set(e.concat(o)))}function A(a,e,o,n,u,g){o>=1&&(a[e+0+o*0]=n.x,a[e+0+o*1]=u.x,a[e+0+o*2]=g.x),o>=2&&(a[e+1+o*0]=n.y,a[e+1+o*1]=u.y,a[e+1+o*2]=g.y),o>=3&&(a[e+2+o*0]=n.z,a[e+2+o*1]=u.z,a[e+2+o*2]=g.z),o>=4&&(a[e+3+o*0]=n.w,a[e+3+o*1]=u.w,a[e+3+o*2]=g.w)}function re(a){return a===void 0?(console.warn("LoopSubdivision: Geometry provided is undefined"),!1):a.isBufferGeometry?a.attributes.position===void 0?(console.warn("LoopSubdivision: Geometry provided missing required 'position' attribute"),!1):(a.attributes.normal===void 0&&a.computeVertexNormals(),!0):(console.warn("LoopSubdivision: Geometry provided is not 'BufferGeometry' type"),!1)}const qe=["scale"],he=we({__name:"shineShader",props:{srcMesh:{},scale:{default:1.2},color:{default:"#ffff00"},subdivision:{type:Boolean,default:!0},c:{default:1.1},p:{default:1.4},side:{default:ge},blending:{default:pe}},setup(a){const e=a,o=se(),n={uniforms:{c:{type:"f",value:e.c},p:{type:"f",value:e.p},glowColor:{type:"c",value:new be(e.color)},viewVector:{type:"v3",value:{x:0,y:0,z:0}}},vertexShader:"\n          uniform vec3 viewVector;\n          uniform float c;\n          uniform float p;\n          varying float intensity;\n          void main() {\n            vec3 vNormal = normalize( normalMatrix * normal);\n            vec3 vNormel = normalize( normalMatrix * viewVector);\n            intensity = pow( c - dot(vNormal, vNormel), p );\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0);\n          }\n            ",fragmentShader:"\n          uniform vec3 glowColor;\n          varying float intensity;\n          void main() \n          {\n          	vec3 glow = glowColor * intensity;\n						if(intensity < 1.0){\n            	gl_FragColor = vec4( glow, 1.0 );\n						}\n          }\n        ",side:e.side,transparent:!0,depthWrite:!1,depthTest:!0,blending:e.blending};Be(()=>{if(e.srcMesh&&!o.value.geometry.attributes.position){let d=e.srcMesh.geometry.clone();e.subdivision&&(d=L.modify(d,2)),o.value.geometry=d,o.value.position.copy(e.srcMesh.position)}e.color&&(n.uniforms.glowColor.value=new be(e.color)),e.c&&(n.uniforms.c.value=e.c),e.p&&(n.uniforms.p.value=e.p)}),le(()=>e.subdivision,d=>{let p=e.srcMesh.geometry.clone();d&&(p=L.modify(p,2)),o.value.geometry=p}),le(()=>e.side,d=>{o.value.material.side=d}),le(()=>e.blending,d=>{o.value.material.blending=d});const{onLoop:u}=Te(),{camera:g}=xe();return u(()=>{g.value&&o.value&&(n.uniforms.viewVector.value=new M().subVectors(g.value.position,o.value.position))}),(d,p)=>(Ae(),Me("TresMesh",{ref_key:"TSGref",ref:o,scale:e.scale},[R("TresShaderMaterial",$e(ze(n)),null,16)],8,qe))}}),Je=R("TresPerspectiveCamera",{position:[5,5,5]},null,-1),Xe=R("TresAmbientLight",{intensity:1},null,-1),Ye=R("TresGridHelper",{args:[10,10]},null,-1),Ke=R("TresSphereGeometry",{args:[1,32,16]},null,-1),Qe=["map"],Ue=["map"],et=R("TresBoxGeometry",{args:[1,1,1,1,1]},null,-1),tt=R("TresMeshBasicMaterial",{color:"#0ff"},null,-1),ot=[et,tt],it=we({__name:"shader",async setup(a){let e,o;const n={clearColor:"#222"},u=se(),g=se(),d=se(),p=([e,o]=Ce(()=>Pe(["./plugins/earthSample/image/earthA/earth.jpg","logo.png"])),e=await e,o(),e),c=Ee({scale:1.6,color:"#00dfff",subdivision:!0,c:1.1,p:1.4,side:ge,blending:pe}),m=new Ge({title:"参数",expanded:!0});return m.addBinding(c,"color",{label:"颜色"}),m.addBinding(c,"scale",{label:"大小",min:1,max:3,step:.2}),m.addBinding(c,"subdivision",{label:"边缘处理"}),m.addBinding(c,"c",{label:"c",min:0,max:2,step:.1}),m.addBinding(c,"p",{label:"p",min:0,max:8,step:.2}),m.addBinding(c,"side",{options:{FrontSide:ge,BackSide:ke,DoubleSide:Ne}}),m.addBinding(c,"blending",{options:{AdditiveBlending:pe,NormalBlending:Ie}}),($,C)=>(Ae(),Ve(te(Re),ne(n,{"window-size":""}),{default:ye(()=>[Je,Xe,oe(te(je)),Ye,R("TresMesh",{ref_key:"TresMeshRefA",ref:u,position:[-2,1,0]},[Ke,R("TresMeshBasicMaterial",{map:te(p)[0]},null,8,Qe)],512),oe(he,ne({srcMesh:u.value},c),null,16,["srcMesh"]),oe(te(Le),{ref_key:"TreBoxRef",ref:d,args:[1,1,1],position:[2,1,0]},{default:ye(()=>[R("TresMeshBasicMaterial",{map:te(p)[1]},null,8,Ue)]),_:1},512),oe(he,ne({srcMesh:d.value&&d.value.value},c),null,16,["srcMesh"]),R("TresMesh",{ref_key:"TresMeshRefB",ref:g,position:[0,1,-2]},ot,512),oe(he,ne({srcMesh:g.value},c),null,16,["srcMesh"])]),_:1},16))}});export{it as default};
