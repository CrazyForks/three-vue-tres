import{c4 as e,Z as x,k as b,ai as C,b2 as S,b9 as $,aL as T,bw as y,al as c,aJ as M,w as h,o as p,c as k,V as r,a8 as g,a9 as w,$ as B,am as E,ab as D,a4 as U,v as m,C as f,J as d,a7 as P,c5 as V,a as u,aa as z,H as F,c2 as L,aE as j,ah as v}from"./vendor.1c7977dc1706256882800.js";import{_ as R}from"./skyBoxAmesh.vue_vue_type_script_setup_true_lang.1c4757fb1706256882800.js";const A=()=>"\n       varying vec2 vUv;\n			 	".concat(e.common,"\n      	").concat(e.bsdfs,"\n      	").concat(e.shadowmap_pars_vertex,"\n       void main() {\n					").concat(e.beginnormal_vertex,"\n          ").concat(e.defaultnormal_vertex,"\n          ").concat(e.begin_vertex,"\n          ").concat(e.project_vertex,"\n          ").concat(e.worldpos_vertex,"\n          ").concat(e.shadowmap_vertex,"\n\n           gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);    \n           vUv = uv;\n       }"),N=()=>"\n	varying vec2 vUv;\n	uniform sampler2D uTexture;\n	uniform vec3 uShadowColor;\n	uniform vec3 uColor;\n	uniform float fEdge;\n	// ShaderMaterial 下的 纹理参数重复无效 要在着色器中增加\n	float repeatTime = 100.0;\n\n	float smoothsteps(float t) {\n			return t * t * (3.0 - 2.0 * t);\n	}\n\n	 ".concat(e.common,"\n	 ").concat(e.packing,"\n	 ").concat(e.bsdfs,"\n	 ").concat(e.lights_pars_begin,"\n	 ").concat(e.shadowmap_pars_fragment,"\n	 ").concat(e.shadowmask_pars_fragment,"\n\n	void main() {\n			vec4 col = texture2D(uTexture, vUv * repeatTime);\n			col.rgb = mix( uColor , col.rgb ,0.5);\n			\n			float alpha = 1.0;\n			float d = length(vUv - vec2(0.5));\n			if(d > 0.35) {\n					alpha = 1.0 - smoothsteps( clamp( (d - 0.35) / (fEdge-0.2), 0.0, 1.0) );\n			}\n\n		 vec3 addShadow = mix( uShadowColor , col.rgb ,getShadowMask());\n\n			gl_FragColor = vec4(addShadow, alpha);  \n	}"),G=["rotation-x"],H=["args"],I=x({__name:"whiteFloorMesh",props:{size:{default:[20,20]},color:{default:"#990"},shadowColor:{default:"#999"},edge:{default:.35}},async setup(_){let s,o;const a=_,t=b(),{map:l}=([s,o]=C(()=>S({map:"./plugins/floor/image/whiteFloor.jpg"})),s=await s,o(),s);l.wrapS=l.wrapT=$;const n={uniforms:T.merge([y.lights,{uTexture:{type:"t",value:l},uColor:{value:new c(a.color)},uShadowColor:{value:new c(a.shadowColor)},fEdge:{type:"f",value:a.edge}}]),side:M,vertexShader:A(),fragmentShader:N(),lights:!0,transparent:!0};return h(()=>a.edge,i=>{n.uniforms.fEdge.value=i}),h(()=>a.color,i=>{n.uniforms.uColor.value=new c(a.color)}),h(()=>a.shadowColor,i=>{n.uniforms.uShadowColor.value=new c(a.shadowColor)}),(i,Z)=>(p(),k("TresMesh",{ref_key:"tmRef",ref:t,"rotation-x":-Math.PI/2},[r("TresPlaneGeometry",{args:a.size},null,8,H),r("TresShaderMaterial",g(w(n)),null,16)],8,G))}}),J=r("TresPerspectiveCamera",{position:[15,15,15],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1),q=r("TresAmbientLight",{intensity:10},null,-1),W=r("TresMesh",{position:[0,2,-4],"cast-shadow":""},[r("TresBoxGeometry",{args:[1,1,1]}),r("TresMeshNormalMaterial")],-1),Q=x({__name:"whiteFloor",setup(_){const s={clearColor:"#201919",windowSize:!0,shadows:!0,toneMapping:V,toneMappingExposure:.8},o=B({size:[20,20],color:"#cbcb96",shadowColor:"#b8b59e",receiveShadow:!0,edge:.35}),a=new E({title:"地板参数",expanded:!0});a.addBinding(o,"edge",{label:"边缘模糊",min:.2,max:.36,step:.01}),a.addBinding(o,"color",{label:"地板颜色"}),a.addBinding(o,"shadowColor",{label:"阴影颜色"}),a.addBinding(o,"receiveShadow",{label:"显示阴影"});const t=D();return U(()=>{t.value&&(t.value.shadow.mapSize.set(1024,1024),t.value.shadow.camera.near=.1,t.value.shadow.camera.far=5e3,t.value.shadow.radius=10)}),(l,n)=>(p(),m(d(P),g(w(s)),{default:f(()=>[J,u(d(z),{enableDamping:""}),q,F(r("TresDirectionalLight",{ref_key:"TDirectionalLight",ref:t,position:[0,10,10],intensity:1,color:"#ffffff","cast-shadow":""},null,512),[[d(L)]]),u(d(j),{args:[1,1,1],color:"orange",position:[3,2,1],"cast-shadow":""}),W,(p(),m(v,null,{default:f(()=>[u(I,g(w(o)),null,16)]),_:1})),(p(),m(v,null,{default:f(()=>[u(R,{texture:"https://opensource-1314935952.cos.ap-nanjing.myqcloud.com/images/skyBox/workshop_blur.jpg"})]),_:1}))]),_:1},16))}});export{Q as default};
