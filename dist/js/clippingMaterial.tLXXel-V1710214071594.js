import{$ as _,k as m,a$ as o,b0 as l,a5 as f,aF as h,o as d,v as g,D as w,K as a,a8 as x,a as b,ab as I,W as e,c as B,G as T,aQ as i,b1 as k,E as v}from"./vendor.8CtyBQ9Q1710214071594.js";const C=e("TresPerspectiveCamera",{fov:40,near:.1,far:200,position:[-1.5,2.5,3]},null,-1),L=e("TresGridHelper",{args:[2,10]},null,-1),M=e("TresHemisphereLight",{args:[16777215,526344,4.5],position:[-1.25,1,1.25]},null,-1),P=["args"],y=["color","side","clipIntersection"],V=_({__name:"clippingMaterial",setup(E){const t=m(),c=[];for(let n=1;n<30;n+=2)c.push(n);const s=[new o(new l(1,0,0),0),new o(new l(0,-1,0),0),new o(new l(0,0,-1),0)],u={clipIntersection:!0,planeConstant:0,showHelpers:!1};f(()=>{if(t.value){const n=t.value.context.renderer.value;n.localClippingEnabled=!0}});const r=new h({title:"裁剪参数",expanded:!0});return r.addBinding(s[0],"constant",{label:"x",min:-1,max:1,step:.1}),r.addBinding(s[1],"constant",{label:"y",min:-1,max:1,step:.1}),r.addBinding(s[2],"constant",{label:"z",min:-1,max:1,step:.1}),(n,G)=>(d(),g(a(x),{ref_key:"tcRef",ref:t,"window-size":""},{default:w(()=>[C,L,M,b(a(I)),e("TresGroup",null,[(d(),B(v,null,T(c,p=>e("TresMesh",{key:p},[e("TresSphereGeometry",{args:[p/30,48,24]},null,8,P),e("TresMeshLambertMaterial",{color:[a(i).randInt(.1,1),a(i).randInt(0,1),a(i).randInt(0,1)],side:a(k),clippingPlanes:s,clipIntersection:u.clipIntersection},null,8,y)])),64))])]),_:1},512))}});export{V as default};
