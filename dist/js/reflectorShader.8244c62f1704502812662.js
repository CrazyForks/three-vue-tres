import{Z as l,$ as d,af as p,o as s,v as i,C as n,J as r,a7 as m,a as o,aa as c,ay as _,aA as f,a8 as u,a9 as g,V as a}from"./vendor.63b8dc9b1704502812662.js";import{_ as h}from"./reflectorShaderMesh.vue_vue_type_script_setup_true_lang.a22f87d41704502812662.js";import"./ReflectorMaterial.498304f61704502812662.js";import"./dither.glsl.1a24d3091704502812662.js";import"./OimoPhysicsBuffer.f13d99711704502812662.js";const x=a("TresPerspectiveCamera",{position:[15,15,15],fov:45,near:.1,far:1e4,"look-at":[0,0,0]},null,-1),B=a("TresAmbientLight",{intensity:10},null,-1),v=a("TresMesh",{position:[0,2,-4]},[a("TresBoxGeometry",{args:[1,1,1]}),a("TresMeshNormalMaterial")],-1),G=l({__name:"reflectorShader",setup(b){const e=d({reflectivity:.49,mirror:.25,mixStrength:26,showGridHelper:!0}),t=new p({title:"镜面参数",expanded:!0});return t.addBinding(e,"reflectivity",{label:"反射率",min:.01,max:1,step:.01}),t.addBinding(e,"mirror",{label:"镜面化",min:0,max:1,step:.01}),t.addBinding(e,"mixStrength",{label:"混合",min:0,max:100,step:1}),t.addBinding(e,"showGridHelper",{label:"显示网格"}),(w,y)=>(s(),i(r(m),{clearColor:"#201919","window-size":""},{default:n(()=>[x,o(r(c),{enableDamping:""}),B,o(r(_),{args:[1,1,1],color:"orange",position:[3,1,0]}),v,(s(),i(f,null,{default:n(()=>[o(h,u(g(e)),null,16)]),_:1}))]),_:1}))}});export{G as default};
