import{Z as T,k as d,a4 as y,ar as M,a3 as S,o as g,c as k,V as e,D as U,aX as D,aS as E,v as N,C as R,J as h,a7 as V,a as p,aa as F}from"./vendor.7da8be181706685333825.js";import{R as G,E as x,S as $}from"./EffectComposer.f39088b61706685333825.js";import{U as L}from"./UnrealBloomPass.18e211271706685333825.js";const z=e("TresBoxGeometry",{args:[1,1,1]},null,-1),j=e("TresMeshNormalMaterial",null,null,-1),A=[z,j],H=e("TresBoxGeometry",{args:[1,1,1]},null,-1),I=e("TresMeshNormalMaterial",null,null,-1),J=[H,I],X=e("TresBoxGeometry",{args:[1,1,1]},null,-1),Z=e("TresMeshNormalMaterial",null,null,-1),q=[X,Z],K=T({__name:"ecLayerShaderPass",setup(P){const s=d(),r=d(),n=d();y(()=>{s.value&&s.value.layers.set(0),r.value&&r.value.layers.set(1),n.value&&n.value.layers.set(2)});const{camera:t,renderer:l,scene:v,sizes:_}=M(),m={strength:.572,radius:.51,threshold:0};let f=null,a=null,o=null;((i,u,c,B,b)=>{f=new G(i,u);const C=new L(new D(B,b),m.strength,m.radius,m.threshold);a=new x(c),a.renderToScreen=!1,a.addPass(f),a.addPass(C)})(v.value,t.value,l.value,_.width.value,_.height.value),(i=>{o=new x(i);const u=new E({uniforms:{baseTexture:{value:null},bloomTexture:{value:a.renderTarget2.texture}},vertexShader:"\n            varying vec2 vUv;\n            void main() {\n                vUv = uv;\n                gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n            }\n        ",fragmentShader:"\n            uniform sampler2D baseTexture;\n            uniform sampler2D bloomTexture;\n            varying vec2 vUv;\n            void main() {\n                gl_FragColor = ( vec4( 1.0 ) *texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );\n            }\n        ",defines:{}}),c=new $(u,"baseTexture");c.needsSwap=!0,o.addPass(f),o.addPass(c)})(l.value);const{onLoop:w}=S();return w(()=>{a&&o&&t.value&&(l.value.clear(),t.value.layers.set(1),a.render(),l.value.clearDepth(),t.value.layers.set(0),o.render(v.value,t.value))}),(i,u)=>(g(),k(U,null,[e("TresMesh",{ref_key:"normalBox",ref:s,position:[3,2,1]},A,512),e("TresMesh",{ref_key:"shineBox",ref:r,position:[0,2,-4]},J,512),e("TresMesh",{ref_key:"filmBox",ref:n,position:[1,2,3]},q,512)],64))}}),O=e("TresPerspectiveCamera",{position:[10,10,10]},null,-1),Q=e("TresAmbientLight",{intensity:1},null,-1),W=e("TresGridHelper",{args:[10,10]},null,-1),te=T({__name:"effectComposerShaderPass",setup(P){const s=d();return y(()=>{if(s.value){let r=s.value.context.renderer.value;r.autoClear=!1}}),(r,n)=>(g(),N(h(V),{disableRender:"","window-size":"",ref_key:"tcRef",ref:s},{default:R(()=>[O,Q,p(h(F)),W,p(K)]),_:1},512))}});export{te as default};
